{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API",
        "description": "API documentation for the News Aggregator application.",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/news-aggregator/public/api"
        }
    ],
    "paths": {
        "/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get paginated list of articles",
                "description": "Retrieve a list of articles with optional filters and pagination.",
                "operationId": "20f46a4be21edb0179e4df7acaa45c18",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for articles",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of articles per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Article"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/articles/{id}": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get article by ID",
                "operationId": "90f7485e28819211cd54fc2b866bd33c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Article"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Article not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch article",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to fetch article"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "operationId": "5d4fa5d5607ed675ba93907e1fc94534",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jhondoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "jhondoe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Registration failed."
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "operationId": "67d6d0fdd54fba132e1b6f55ca254183",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jhondoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "your-access-token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "jhondoe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logout user",
                "operationId": "28d48c13fca984400ac8de99f54ee13a",
                "responses": {
                    "200": {
                        "description": "Successfully logged out."
                    },
                    "500": {
                        "description": "Something went wrong."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/forgot": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Send reset password link",
                "operationId": "40444b3ef0c4ddcf425c7dd08ad36163",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent."
                    },
                    "400": {
                        "description": "Error sending reset link."
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Reset user password",
                "operationId": "583c81b550c52da53f5f9c9de3c21c56",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful."
                    },
                    "400": {
                        "description": "Password reset failed."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserRegistrationRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Article"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Full name of the user",
                                "type": "string"
                            },
                            "email": {
                                "description": "Email address of the user",
                                "type": "string",
                                "format": "email"
                            },
                            "password": {
                                "description": "Password for the user account",
                                "type": "string",
                                "format": "password"
                            },
                            "password_confirmation": {
                                "description": "Password confirmation",
                                "type": "string",
                                "format": "password"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Article"
                    },
                    {
                        "properties": {
                            "email": {
                                "description": "The email of the user",
                                "type": "string",
                                "format": "email"
                            },
                            "password": {
                                "description": "The password of the user",
                                "type": "string",
                                "format": "password"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "User": {
                "properties": {
                    "id": {
                        "description": "Unique identifier of the user",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Article": {
                "description": "Article resource schema",
                "properties": {
                    "id": {
                        "description": "ID of the article",
                        "type": "integer"
                    },
                    "source_name": {
                        "description": "Name of the article's source",
                        "type": "string"
                    },
                    "title": {
                        "description": "Title of the article",
                        "type": "string"
                    },
                    "description": {
                        "description": "Short description of the article",
                        "type": "string"
                    },
                    "content": {
                        "description": "Full content of the article",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL to the article",
                        "type": "string"
                    },
                    "url_to_image": {
                        "description": "URL to the article's image",
                        "type": "string"
                    },
                    "category": {
                        "description": "Category of the article",
                        "type": "string"
                    },
                    "author": {
                        "description": "Author of the article",
                        "type": "string"
                    },
                    "published_at": {
                        "description": "Publication date of the article",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Sanctum Bearer Token Authentication",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "User",
            "description": "APIs for user authentication and password management"
        },
        {
            "name": "Articles",
            "description": "Articles"
        }
    ]
}